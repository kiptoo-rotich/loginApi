{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-service.service.ts","webpack:///./src/app/authenticate.guard.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/user-list/user-list.component.css","webpack:///./src/app/user-list/user-list.component.html","webpack:///./src/app/user-list/user-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthenticateGuard } from './authenticate.guard';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes=[\n  {\n    path:'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path:'',\n    component: DashboardComponent,\n    canActivate:[AuthenticateGuard]\n  },\n  {\n    path:'list',\n    component: UserListComponent,\n    canActivate:[AuthenticateGuard]\n  },\n  {\n    path:'home',\n    component: HomeComponent,\n    canActivate:[AuthenticateGuard]\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light justify-content-between\\\">\\n    <div>\\n\\n    </div>\\n    <div *ngIf=\\\"authenticated; else elseBlock\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"home\\\" routerLinkActive='active'>Home</a>\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"list\\\">Users</a>\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\" routerLinkActive='active'>Profile</a>\\n        <button class=\\\"btn btn-outline-danger my-2 my-sm-0\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n    <ng-template #elseBlock>\\n        <div>\\n            <a class=\\\"navbar-brand\\\" routerLink=\\\"login\\\" routerLinkActive='active'>Login</a>\\n        </div>\\n    </ng-template>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AuthServiceService } from './auth-service.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n   ngOnInit() {\n  }\n\n  authenticated = this.authService.isAuthenticated()\n\n  title = 'app';\n  constructor(private authService:AuthServiceService,private toastr:ToastrService){}\n  \n  logout(){\n    this.authService.logout()\n    this.toastr.warning(\"Logged out\");\n    location.reload()\n  }\n  getLocation() {\n    this.toastr.warning(\n      \"If co-ordinates doesn't show, kindly refresh the page.\"\n    );\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position: Position) => {\n        if (position) {\n          localStorage.setItem(\n            \"current_latitude\",\n            JSON.stringify(position.coords.latitude)\n          ),\n            localStorage.setItem(\n              \"current_longitude\",\n              JSON.stringify(position.coords.longitude)\n            );\n        }\n        (error: Error) => console.log(error);\n      });\n    } else {\n      this.toastr.warning(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { HomeComponent } from './home/home.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    DashboardComponent,\n    NotFoundComponent,\n    UserListComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    NgxPaginationModule,\n    ToastrModule.forRoot()\n\n  ],\n  providers: [UserListComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, forkJoin, Observable, of } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\n\nexport interface AuthResponseData {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class AuthServiceService {\n  private currentUserSubject: BehaviorSubject<any>;\n  public User: Observable<any>;\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject<any>(\n      JSON.parse(localStorage.getItem(\"User\"))\n    );\n    this.User = this.currentUserSubject.asObservable();\n  }\n  login(email:string, password:string): Observable<any> {\n    return this.http.post(`${environment.baseUrl}register`,{email, password});\n  }\n\n  userdata(id): Observable<any> {\n    id = this.http.get(`${environment.baseUrl}users/` + id);\n    return id;\n  }\n\n  all_users(): Observable<any> {\n    let data1$=this.http.get(`${environment.apiUrl}?page=1`)\n    let data$=this.http.get(`${environment.apiUrl}?page=2`)\n    let final_data$=forkJoin(data$,data1$)\n    return final_data$;\n  }\n\n  createUser(data) {\n    return this.http.post(`${environment.baseUrl}register`, data);\n  }\n\n  get token(){\n    return localStorage.getItem(\"Token\");\n  }\n\n  update(id, data) {\n    return this.http.patch(`${environment.baseUrl}users/${id}`, data);\n  }\n\n  delete(id) {\n    return this.http.delete(`${environment.baseUrl}/${id}`);\n  }\n\n  public isAuthenticated(): boolean {\n    const token = this.token;\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem(\"User\");\n    localStorage.removeItem(\"Token\");\n    localStorage.removeItem(\"current_longitude\");\n    localStorage.removeItem(\"current_latitude\");\n    localStorage.removeItem(\"updatedUser\");\n    localStorage.removeItem(\"UsersList\");\n    this.currentUserSubject.next(null);\n    this.router.navigate([\"login\"]);\n  }\n\n  private handleUser(response: AuthResponseData) {\n    const expireDate = new Date(\n      new Date().getTime() + +response.expiresIn * 1000\n    );\n    this.autoLogout(+response.expiresIn * 1000);\n  }\n\n  autoLogout(expDate: number) {\n    setTimeout(() => {\n      this.logout();\n    }, 2000);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthServiceService } from './auth-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateGuard implements CanActivate {\n  constructor(public auth: AuthServiceService, public router: Router){}\n  \n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","module.exports = \"img {\\n    border-radius: 50%;\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\" id=\\\"data\\\" #userData>\\n    <div *ngIf=\\\"updatedUser; else elseBlock\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-3\\\">\\n                <img src=\\\"{{updatedUser.data.avatar}}\\\" alt=\\\"\\\" width=\\\"100%\\\" height=\\\"100%\\\">\\n            </div>\\n            <div class=\\\"col-9\\\">\\n                <p>\\n                    Name: <b>{{updatedUser.first_name.username}}</b>\\n                </p>\\n                <p>\\n                    Email: <i><b>{{updatedUser.data.email}}</b></i>\\n                </p>\\n                <p>\\n                    Job: <i><b>{{updatedUser.first_name.job}}</b></i>\\n                </p>\\n\\n                <button class=\\\"btn btn-md btn-danger mr-2\\\" (click)=\\\"deleteUpdates()\\\">Delete updates</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Update</button>\\n            </div>\\n        </div>\\n    </div>\\n    <ng-template #elseBlock>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-3\\\">\\n                <img src=\\\"{{data.avatar}}\\\" alt=\\\"\\\" width=\\\"100%\\\" height=\\\"100%\\\">\\n            </div>\\n            <div class=\\\"col-9\\\">\\n                <p>\\n                    Full name: <b>{{data.first_name}} {{data.last_name}}</b>\\n                </p>\\n                <p>\\n                    Email: <i><b>{{data.email}}</b></i>\\n                </p>\\n                <button class=\\\"btn btn-md btn-danger mr-2\\\" (click)=\\\"deleteUpdates()\\\">Delete updates</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Update</button>\\n            </div>\\n        </div>\\n    </ng-template>\\n\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Update profile</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n                </div>\\n                <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"updateProfile()\\\">\\n\\n                    <div class=\\\"modal-body\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Name\\\" required>\\n                        <input type=\\\"text\\\" class=\\\"form-control mt-2\\\" formControlName=\\\"job\\\" placeholder=\\\"Job\\\" required>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                        <button type=\\\"submit\\\"[disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../auth-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { stringify } from 'querystring';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  formGroup:FormGroup;\n  constructor(private authService:AuthServiceService,private router: Router,private toastr:ToastrService,private sweet:AppComponent) {  \n}\n\nngOnInit() {this.formGroup=new FormGroup({\n  job: new FormControl('',[Validators.required]),\n  username: new FormControl('',[Validators.required]),\n})\n} \n\n  data=JSON.parse(localStorage.getItem(\"User\"));\n  updatedUser=JSON.parse(localStorage.getItem(\"updatedUser\"));\n\n  deleteUpdates(){\n    if(this.updatedUser){\n      localStorage.removeItem(\"updatedUser\");\n      location.reload();\n    }else{\n      this.toastr.warning(\"You have no updates yet.\");\n    }\n  }\n  \n  updateProfile(){\n    let jobId=this.data.id;\n    let job=this.formGroup.value;\n    let first_name=this.data.first_name;\n    this.authService.update(jobId, job).subscribe(updated=>{\n      console.log(updated)\n      let update={\n        data:this.data,\n        job:this.formGroup.value.job,\n        first_name:this.formGroup.value,\n      }\n      localStorage.setItem(\"updatedUser\",JSON.stringify(update));\n      window.location.reload();\n    })\n    this.toastr.success(\"Profile update successfully\");\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n        <p><i>Your token: <b><i>{{Token}}</i></b>\\n        </i>\\n    </p>\\n    <p>User: <i><b>{{User.id}}</b></i></p>\\n    <p>Latitude: <i><b>{{current_latitude}}</b></i></p>\\n    <p>Longitude: <i><b>{{current_longitude}}</b></i></p>\\n</div>\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  ngOnInit() {\n  }\n\n  constructor(private authService:AuthServiceService) { }\n\n  Token = localStorage.getItem(\"Token\");\n  User = JSON.parse(localStorage.getItem(\"User\"));\n  current_latitude=JSON.parse(localStorage.getItem(\"current_latitude\"));\n  current_longitude=JSON.parse(localStorage.getItem(\"current_longitude\"));\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"d-flex justify-content-center h-100\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3 class=\\\"text-center\\\">Login</h3>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"loginProcess()\\\">\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><img src=\\\"./../../assets/icons8-user-50.png\\\" alt=\\\"\\\"width=\\\"100%\\\"></span>\\n                        </div>\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\" required>\\n                    </div>\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><img src=\\\"../../assets/icons8-password-30.png\\\" alt=\\\"\\\"width=\\\"100%\\\"></span>\\n                        </div>\\n                        <input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" />\\n                        <div class=\\\"input-group-text\\\">\\n                            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType}\\\" (click)=\\\"toggleFieldTextType()\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"submit\\\" [disabled]=\\\"!formGroup.valid\\\" value=\\\"Login\\\" class=\\\"btn float-right\\\" />\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"d-flex justify-content-center links\\\">\\n                    Don't have an account?\\n                    <a routerLink=\\\"/signup\\\">Sign Up</a>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthServiceService } from \"../auth-service.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { UserListComponent } from \"../user-list/user-list.component\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n  constructor(\n    private authService: AuthServiceService,\n    private router: Router,\n    private toastr: ToastrService,\n    private userList: UserListComponent\n  ) {}\n  initForm() {\n    this.formGroup = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n  \n  fieldTextType: boolean;\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  getLocation() {\n    this.toastr.warning(\n      \"If co-ordinates doesn't show, kindly refresh the page.\"\n    );\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position: Position) => {\n        if (position) {\n          localStorage.setItem(\n            \"current_latitude\",\n            JSON.stringify(position.coords.latitude)\n          ),\n            localStorage.setItem(\n              \"current_longitude\",\n              JSON.stringify(position.coords.longitude)\n            );\n        }\n        (error: Error) => console.log(error);\n      });\n    } else {\n      this.toastr.warning(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  toDisplay = false;\n  toDisplay1 = true;\n\n  toggleData() {\n    this.toDisplay = !this.toDisplay;\n    this.toDisplay1 = !this.toDisplay1;\n  }\n\n  Token = JSON.parse(localStorage.getItem(\"Token\"));\n\n  loginProcess() {\n    if (this.formGroup.valid) {\n      this.authService.login(this.formGroup.value.email,this.formGroup.value.password).subscribe((result) => {\n        if (result.token) {\n          this.authService.userdata(result.id).subscribe((results) => {\n            this.getLocation();\n            localStorage.setItem(\"Token\", result.token);\n            localStorage.setItem(\"User\", JSON.stringify(results.data));\n            this.router.navigate([\"\"]);\n            this.toastr.success(\"Login successfull\");\n            console.log(this.userList)\n          });\n        } else {\n          this.toastr.warning(\"Login failed\");\n        }\n      });\n    } else{\n      this.toastr.warning(\"Invalid email address\")\n    }\n  }\n}\n","module.exports = \".notFound {\\n    background-color: red;\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n    border-radius: 10px;\\n    width: 50%;\\n    box-shadow: 0px 0px 5px 5px;\\n    margin: 0px auto;\\n    padding: 1% 2% 1% 2%;\\n    color: white;\\n}\\n\\nh4 {\\n    font-size: 40px;\\n}\\n\\np {\\n    font-size: 25px;\\n}\\n\\n.container {\\n    margin-top: 10%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"notFound\\\">\\n        <h4>Oops! Sorry</h4>\\n        <p>We couldn't find what you are looking for. Kindly recheck your url.</p>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <div class=\\\"card\\\" id=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3>Sign Up</h3>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"registerProcess()\\\">\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><img src=\\\"./../../assets/icons8-user-50.png\\\" alt=\\\"\\\"\\n                                    width=\\\"100%\\\" /></span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\" />\\n                    </div>\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><img src=\\\"../../assets/icons8-password-30.png\\\" alt=\\\"\\\"\\n                                    width=\\\"100%\\\" /></span>\\n                        </div>\\n                        <input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" minlength=\\\"8\\\" />\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\">\\n                                <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType}\\\" (click)=\\\"toggleFieldTextType()\\\"></i>\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><img src=\\\"../../assets/icons8-password-30.png\\\" alt=\\\"\\\"\\n                                    width=\\\"100%\\\" /></span>\\n                        </div>\\n                        <input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm password\\\" formControlName=\\\"confirm_password\\\" minlength=\\\"8\\\" />\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\">\\n                                <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-eye-slash': !fieldTextType, 'fa-eye': fieldTextType }\\\" (click)=\\\"toggleFieldTextType()\\\"></i>\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"submit\\\" [disabled]=\\\"!formGroup.valid\\\" value=\\\"Signup\\\" class=\\\"btn float-right\\\" />\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"d-flex justify-content-center links\\\">\\n                    Don't have an account?<a routerLink=\\\"/\\\">Sign In</a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { AppComponent } from \"../app.component\";\nimport { AuthServiceService } from \"../auth-service.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"],\n})\nexport class SignupComponent implements OnInit {\n  formGroup: FormGroup;\n  constructor(\n    private authService: AuthServiceService,\n    private router: Router,\n    private toastr: ToastrService,\n    private users: AppComponent\n  ) {}\n  initForm() {\n    this.formGroup = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required]),\n      confirm_password: new FormControl(\"\", [Validators.required]),\n    });\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n\n  fieldTextType: boolean;\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n\n  Token = JSON.parse(this.authService.token);\n\n  regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/;\n\n  registerProcess() {\n    if (this.formGroup.valid) {\n      let parameters = {\n        email: this.formGroup.value.email,\n        password: this.formGroup.value.password,\n      };\n      this.authService.createUser(parameters).subscribe((register) => {\n        if (this.formGroup.value.password.match(this.regularExpression)) {\n          if (\n            this.formGroup.value.password ===\n            this.formGroup.value.confirm_password\n          ) {\n            localStorage.setItem(\"Token\", JSON.stringify(register));\n            this.toastr.success(\"User created successfully!\");\n            let id = JSON.stringify(this.Token.id);\n            this.authService.userdata(id).subscribe((log) => {\n              this.users.getLocation();\n              localStorage.setItem(\"User\", JSON.stringify(log.data));\n              this.router.navigate([\"\"]);\n              this.toastr.success(\"Login successfull\");\n            });\n          } else {\n            this.toastr.warning(\"Passwords does not match!\");\n          }\n        } else {\n          this.toastr.warning(\n            \"Password should contain 8 or more combination of alphanumeric and special characters.\"\n          );\n        }\n      });\n    } else {\n      this.toastr.warning(\n        \"Kindly provide a valid email address and password with 8 or more characters.\"\n      );\n    }\n  }\n}\n","module.exports = \"td>img {\\n    border-radius: 50%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row mt-5\\\">\\n        <table class=\\\"table\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">Id</th>\\n                    <th scope=\\\"col\\\">Image</th>\\n                    <th scope=\\\"col\\\">First</th>\\n                    <th scope=\\\"col\\\">Last</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                </tr>\\n            </thead>\\n            <tr *ngFor=\\\"let item of UsersList | paginate: { itemsPerPage: 4, currentPage: page, totalItems:totalLength }\\\">\\n                <th scope=\\\"row\\\">{{item.id}}</th>\\n                <td><img src=\\\"{{item.avatar}}\\\" alt=\\\"\\\" width=\\\"25%\\\" height=\\\"25%\\\"></td>\\n                <td>{{item.first_name}}</td>\\n                <td>{{item.last_name}}</td>\\n                <td>{{item.email}}</td>\\n            </tr>\\n        </table>\\n    </div>\\n    <pagination-controls (pageChange)=\\\"page = $event\\\"></pagination-controls>\\n\\n</div>\"","import { combineLatest, forkJoin } from 'rxjs';\nimport { Component, OnInit } from \"@angular/core\";\nimport { AuthServiceService } from \"../auth-service.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n\n@Component({\n  selector: \"app-user-list\",\n  templateUrl: \"./user-list.component.html\",\n  styleUrls: [\"./user-list.component.css\"],\n})\nexport class UserListComponent implements OnInit {\n  constructor(\n    private authService: AuthServiceService,\n    private toastr: ToastrService\n  ) {}\n\n    totalLength:any;\n    page:number;\n\n  ngOnInit() {\n    this.usersList();\n  }\n\n  UsersList = JSON.parse(localStorage.getItem(\"UsersList\"));\n\n  usersList() {\n    this.authService.all_users().subscribe((listing) => {\n      if (listing) {\n        let list=listing[1].data.concat(listing[0].data)\n        this.totalLength=list.length;\n        localStorage.setItem(\"UsersList\", JSON.stringify(list))\n        // this.toastr.warning(\"Kindly refresh page if users didn't display\")\n      } else {\n        this.toastr.warning(\"No data\");\n      }\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'https://reqres.in/api/',\n  apiUrl:'https://reqres.in/api/users/',\n};\n\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}